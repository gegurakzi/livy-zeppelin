# Default values for spark.
# This is a YAML-formatted file.
# Declare name/value pairs to be passed into your templates.
# name: value

Spark:
  Path: "/opt/spark"

Master:
  Name: master
  Image: "gegurakzi/livy"
  ImageTag: "latest"
  ImagePullPolicy: IfNotPresent
  Replicas: 1
  Component: "spark-master"
  Cpu: "100m"
  Memory: "512Mi"
  ServicePort: 7077
  ContainerPort: 7077
  # Set Master JVM memory. Default 1g
  # DaemonMemory: 1g
  ServiceType: LoadBalancer

WebUi:
  Name: webui
  ServicePort: 8080
  ContainerPort: 8080

Worker:
  Name: worker
  Image: "gegurakzi/livy"
  ImageTag: "latest"
  ImagePullPolicy: IfNotPresent
  Replicas: 3
  Component: "spark-worker"
  Cpu: "100m"
  Memory: "4096Mi"
  ContainerPort: 8081
  # Set Worker JVM memory. Default 1g
  DaemonMemory: 4g
  # Set how much total memory workers have to give executors
  ExecutorMemory: 3g
  Autoscaling:
    Enabled: false
  ReplicasMax: 10
  CpuTargetPercentage: 50

Livy:
  Global: {}
  Name: livy
  Image: "gegurakzi/livy-server"
  ImageTag: "latest"
  ImagePullPolicy: IfNotPresent
  ImagePullSecrets: []
  NodeSelector: {}
  Tolerations: []
  Affinity: {}
  Rbac:
    Create: true
  Service:
    Type: NodePort
    Port: 8080
    # If not set, a name is generated using the fullname template
    Name:
  ServiceAccount:
    Create: false
    # If not set and create is true, a name is generated using the fullname template
    Name:
  SparkServiceAccount:
    Create: false
    # If not set and create is true, a name is generated using the fullname template
    Name:
  Resources: {}
  # Livy run mode on spark 
  RunMode: client
  Env:
    LIVY_SPARK_EVENT1LOG_ENABLED: {value: "false"}
    #LIVY_SPARK_EVENT1LOG_DIR: {value: "file:///tmp/history-server"}
    #####################
    # Livy on Local Values
    #LIVY_LIVY_SPARK_MASTER: {value: "local[4]"}
    #####################
     # Livy on Spark Standalone Cluster Values
    LIVY_LIVY_SPARK_EXECUTOR_MEMORY: {value: "1G"}
    LIVY_SPARK_EXECUTOR_CORES: {value: "2"}
    LIVY_SPARK_SHUFFLE_SERVICE_ENABLED: {value: "false"}
    LIVY_SPARK_DYNAMIC1ALLOCATION_ENABLED: {value: "true"}
    LIVY_SPARK_DYNAMIC1ALLOCATION_MIN1EXECUTORS: {value: "1"}
    LIVY_SPARK_DYNAMIC1ALLOCATION_MAX1EXECUTORS: {value: "5"}
    LIVY_SPARK_SQL_EXTENSIONS: {value: "org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions"}
    LIVY_SPARK_SQL_CATALOG_DATAFRAME: {value: "org.apache.iceberg.spark.SparkCatalog"}
    LIVY_SPARK_SQL_CATALOG_DATAFRAME_TYPE: {value: "hadoop"}
    LIVY_SPARK_SQL_CATALOG_DATAFRAME_WAREHOUSE: {value: "o3fs://dataframe.catalog.om.ozone/warehouse"}
    LIVY_SPARK_SQL_DEFAULT1CATALOG: {value: "dataframe"}
  EnvFrom: []
  LivyConf: {}
  SparkDefaultsConf: {}
  LivyClientConf: {}
  Persistence:
    Enabled: false
    #storageClass: "nfs-client"
    #accessMode: ReadWriteOnce
    #size: 20Gi
    #annotations: {}
  VolumeShare:
    Enabled: false
    #MountPath: /root/.livy-sessions
    #StorageClass: "nfs-client"
    #AccessMode: ReadWriteOnce
    #Size: 20Gi
  
Zeppelin:
  Name: zeppelin
  Image: "gegurakzi/zeppelin"
  ImageTag: "latest"
  ImagePullPolicy: IfNotPresent
  Replicas: 1
  Component: "zeppelin"
  Cpu: "100m"
  ServicePort: 8080
  ContainerPort: 8080
  ServiceType: NodePort
  Headless: false
  # Zeppelin interpreter run mode 
  RunMode: local
  Ingress:
    Enabled: false
    Path: "/"
    Tls: []
  #    - Hosts:
  #    SecretName: zeppelin
  # Used to create an Ingress record.
  # Hosts:
  # - example.local
  # Annotations:
  #   kubernetes.io/ingress.class: nginx
  #   kubernetes.io/tls-acme: "true"
  # Tls:
  #   Enabled: true
  # Secrets must be manually created in the namespace.
  #   SecretName: example-tls
  #   Hosts:
  #   - example.local
  Persistence:
    Config:
      Enabled: false
      ## etcd data Persistent Volume Storage Class
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ## set, choosing the default provisioner. (gp2 on AWS, standard on
      ## GKE, AWS & OpenStack)
      StorageClass: "-"
      ## Set default PVC size
      Size: 10G
      ## Set default PVC access mode: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes
      AccessMode: ReadWriteOnce
    Notebook:
      Enabled: false
      StorageClass: "-"
      Size: 10G
      AccessMode: ReadWriteOnce
